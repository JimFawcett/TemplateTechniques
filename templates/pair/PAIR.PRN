#ifndef PAIR_H
#define PAIR_H
///////////////////////////////////////////////////////////////////////
// pair.h - demonstrate class templates                              //
//                                                                   //
// Jim Fawcett, CSE687 - Object Oriented Design, Spring 2004         //
///////////////////////////////////////////////////////////////////////
//
//   class pair packs two objects into a container for transportation.
//   Can help a function return more than one object.
//
template <class L, class R> class pair {

  public:
    pair(const pair<L,R>& p) : lft(p.lft), rgt(p.rgt) {}
    pair(const L& larg, const R&  rarg) : lft(larg), rgt(rarg) {}
    L  left() const { return lft; }
    R right() const { return rgt; }
    void  left(const L& larg) { lft = larg; }
    void right(const R& rarg) { rgt = rarg; }
  private:
    L lft;
    R rgt;
};

#endif
/////////////////////////////////////////////////////////////////////////
// pair.cpp - demonstrate class templates                              //
//            Example in:                                              //
//            Murray, C++ Strategies and Tactics, Addison-Wesley, 1993 //
//                                                                     //
// Jim Fawcett, CSE687 - Object Oriented Design, Spring 2004           //
/////////////////////////////////////////////////////////////////////////

#ifdef TEST_PAIR

#include "pair.h"

pair<int,double> funct(int x, double y) 
{
  pair<int,double> temp(2*x,x+y);
  return temp;
}

#include <iostream>
using namespace std;

void main() 
{
  cout << "  Demonstrating Template Class - pair<L,R>\n"
       << " ==========================================\n\n";

  int x = 3; double y = 5.555;

  pair<int,double> myPair = funct(x,y);

  cout << "  funct returned myPair("
       << myPair.left()
       << ", "
       << myPair.right()
       << ")" << endl<< endl;
}

#endif


  Demonstrating Template Class - pair<L,R>
 ==========================================

  funct returned myPair(6, 8.555)

